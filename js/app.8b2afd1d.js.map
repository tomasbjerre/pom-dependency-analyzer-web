{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/plugins/vuetify.ts","webpack:///./src/App.vue?09b9","webpack:///./src/services/pdaw/base.ts","webpack:///./src/services/pdaw/api.ts","webpack:///./src/App.vue?5dd0","webpack:///./src/App.vue?aea5","webpack:///./src/App.vue","webpack:///./src/router.ts","webpack:///./src/store.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","vue_runtime_esm","use","lib","iconfont","Appvue_type_template_id_21c99d92_render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","_s","number_of_artifacts","last_updated","flat","href","target","staticRenderFns","BASE_PATH","replace","base_BaseAPI","BaseAPI","configuration","basePath","arguments","undefined","axios","axios_default","a","classCallCheck","base_RequiredError","_Error","RequiredError","field","msg","_this","possibleConstructorReturn","getPrototypeOf","inherits","wrapNativeSuper","Error","api_DefaultApiAxiosParamCreator","getArtifacts","groupId","options","baseOptions","localVarPath","concat","encodeURIComponent","String","localVarUrlObj","url","localVarRequestOptions","objectSpread","method","localVarHeaderParameter","localVarQueryParameter","query","search","headers","getDependencies","artifactId","version","getDependents","getGlobalMetadata","getGroupIds","getMetadata","getParsed","getVersions","api_DefaultApiFp","localVarAxiosArgs","axiosRequestArgs","request","api_DefaultApi","_BaseAPI","DefaultApi","createClass","Appvue_type_script_lang_ts_App","_Vue","App","metadata","_this2","then","it","found","filter","vue_property_decorator","tslib_es6","Appvue_type_script_lang_ts_","src_Appvue_type_script_lang_ts_","component","componentNormalizer","src_App","installComponents_default","VApp","VBtn","VContent","VIcon","VSpacer","VGrid","VToolbar","VToolbarTitle","components_VToolbar","vue_router_esm","router","base","routes","vuex_esm","store","Store","state","mutations","actions","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.8b2afd1d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\nimport 'vuetify/src/stylus/app.styl';\n\nVue.use(Vuetify, {\n  iconfont: 'md',\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('v-toolbar',{attrs:{\"app\":\"\"}},[_c('v-toolbar-title',{staticClass:\"headline text-uppercase\"},[_c('span',[_vm._v(\"Pom Dependency Analyzer Web\")]),_c('br'),_c('span',{staticClass:\"font-weight-light\"},[_vm._v(\"\\n        \"+_vm._s(_vm.number_of_artifacts)+\" artifacts indexed at\\n        \"+_vm._s(_vm.last_updated)+\"\\n      \")])]),_c('v-spacer'),_c('v-btn',{attrs:{\"flat\":\"\",\"href\":\"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/tomasbjerre/pom-dependency-analyzer-web/master/swagger.yml\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"mr-2\"},[_vm._v(\"Swagger\")]),_c('v-icon',[_vm._v(\"open_in_new\")])],1),_c('v-btn',{attrs:{\"flat\":\"\",\"href\":\"https://github.com/tomasbjerre/pom-dependency-analyzer-web\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"mr-2\"},[_vm._v(\"GitHub\")]),_c('v-icon',[_vm._v(\"open_in_new\")])],1)],1),_c('v-content',[_vm._v(\"content\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// tslint:disable\n/// <reference path=\"./custom.d.ts\" />\n/**\n * Pom Dependency Analyzer Web\n * https://github.com/tomasbjerre/pom-dependency-analyzer-web\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Configuration } from './configuration';\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = 'https://tomasbjerre.github.io/pom-dependency-analyzer-web/api'.replace(\n  /\\/+$/,\n  ''\n);\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n  csv: ',',\n  ssv: ' ',\n  tsv: '\\t',\n  pipes: '|',\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n  url: string;\n  options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n  protected configuration: Configuration | undefined;\n\n  constructor(\n    configuration?: Configuration,\n    protected basePath: string = BASE_PATH,\n    protected axios: AxiosInstance = globalAxios\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = configuration.basePath || this.basePath;\n    }\n  }\n}\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n  name: 'RequiredError' = 'RequiredError';\n  constructor(public field: string, msg?: string) {\n    super(msg);\n  }\n}\n","// tslint:disable\n/// <reference path=\"./custom.d.ts\" />\n/**\n * Pom Dependency Analyzer Web\n * https://github.com/tomasbjerre/pom-dependency-analyzer-web\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as url from 'url';\nimport { Configuration } from './configuration';\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\nimport {\n  BASE_PATH,\n  COLLECTION_FORMATS,\n  RequestArgs,\n  BaseAPI,\n  RequiredError,\n} from './base';\n\n/**\n *\n * @export\n * @interface Artifact\n */\nexport interface Artifact {\n  /**\n   *\n   * @type {string}\n   * @memberof Artifact\n   */\n  groupId: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Artifact\n   */\n  artifactId: string;\n}\n\n/**\n *\n * @export\n * @interface Dependency\n */\nexport interface Dependency {\n  /**\n   *\n   * @type {string}\n   * @memberof Dependency\n   */\n  groupId: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Dependency\n   */\n  artifactId: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Dependency\n   */\n  version: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Dependency\n   */\n  classifier?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Dependency\n   */\n  type: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Dependency\n   */\n  scope: string;\n}\n\n/**\n *\n * @export\n * @interface Group\n */\nexport interface Group {\n  /**\n   *\n   * @type {string}\n   * @memberof Group\n   */\n  groupId: string;\n}\n\n/**\n *\n * @export\n * @interface Metadata\n */\nexport interface Metadata {\n  /**\n   *\n   * @type {string}\n   * @memberof Metadata\n   */\n  key: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Metadata\n   */\n  value: string;\n}\n\n/**\n *\n * @export\n * @interface Version\n */\nexport interface Version {\n  /**\n   *\n   * @type {string}\n   * @memberof Version\n   */\n  groupId: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Version\n   */\n  artifactId: string;\n  /**\n   *\n   * @type {string}\n   * @memberof Version\n   */\n  version: string;\n}\n\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexport const DefaultApiAxiosParamCreator = function(\n  configuration?: Configuration\n) {\n  return {\n    /**\n     *\n     * @summary Get list of artifacts\n     * @param {string} groupId The groupId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getArtifacts(groupId: string, options: any = {}): RequestArgs {\n      // verify required parameter 'groupId' is not null or undefined\n      if (groupId === null || groupId === undefined) {\n        throw new RequiredError(\n          'groupId',\n          'Required parameter groupId was null or undefined when calling getArtifacts.'\n        );\n      }\n      const localVarPath = `/pdaw/groups/{groupId}/artifacts.json`.replace(\n        `{${'groupId'}}`,\n        encodeURIComponent(String(groupId))\n      );\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get list of dependencies\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDependencies(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'groupId' is not null or undefined\n      if (groupId === null || groupId === undefined) {\n        throw new RequiredError(\n          'groupId',\n          'Required parameter groupId was null or undefined when calling getDependencies.'\n        );\n      }\n      // verify required parameter 'artifactId' is not null or undefined\n      if (artifactId === null || artifactId === undefined) {\n        throw new RequiredError(\n          'artifactId',\n          'Required parameter artifactId was null or undefined when calling getDependencies.'\n        );\n      }\n      // verify required parameter 'version' is not null or undefined\n      if (version === null || version === undefined) {\n        throw new RequiredError(\n          'version',\n          'Required parameter version was null or undefined when calling getDependencies.'\n        );\n      }\n      const localVarPath = `/pdaw/groups/{groupId}/artifacts/{artifactId}/versions/{version}/dependencies.json`\n        .replace(`{${'groupId'}}`, encodeURIComponent(String(groupId)))\n        .replace(`{${'artifactId'}}`, encodeURIComponent(String(artifactId)))\n        .replace(`{${'version'}}`, encodeURIComponent(String(version)));\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get list of dependents\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDependents(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'groupId' is not null or undefined\n      if (groupId === null || groupId === undefined) {\n        throw new RequiredError(\n          'groupId',\n          'Required parameter groupId was null or undefined when calling getDependents.'\n        );\n      }\n      // verify required parameter 'artifactId' is not null or undefined\n      if (artifactId === null || artifactId === undefined) {\n        throw new RequiredError(\n          'artifactId',\n          'Required parameter artifactId was null or undefined when calling getDependents.'\n        );\n      }\n      // verify required parameter 'version' is not null or undefined\n      if (version === null || version === undefined) {\n        throw new RequiredError(\n          'version',\n          'Required parameter version was null or undefined when calling getDependents.'\n        );\n      }\n      const localVarPath = `/pdaw/groups/{groupId}/artifacts/{artifactId}/versions/{version}/dependents.json`\n        .replace(`{${'groupId'}}`, encodeURIComponent(String(groupId)))\n        .replace(`{${'artifactId'}}`, encodeURIComponent(String(artifactId)))\n        .replace(`{${'version'}}`, encodeURIComponent(String(version)));\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get global metadata\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getGlobalMetadata(options: any = {}): RequestArgs {\n      const localVarPath = `/pdaw/metadata.json`;\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get list of groups\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getGroupIds(options: any = {}): RequestArgs {\n      const localVarPath = `/pdaw/groups.json`;\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get version metadata\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getMetadata(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'groupId' is not null or undefined\n      if (groupId === null || groupId === undefined) {\n        throw new RequiredError(\n          'groupId',\n          'Required parameter groupId was null or undefined when calling getMetadata.'\n        );\n      }\n      // verify required parameter 'artifactId' is not null or undefined\n      if (artifactId === null || artifactId === undefined) {\n        throw new RequiredError(\n          'artifactId',\n          'Required parameter artifactId was null or undefined when calling getMetadata.'\n        );\n      }\n      // verify required parameter 'version' is not null or undefined\n      if (version === null || version === undefined) {\n        throw new RequiredError(\n          'version',\n          'Required parameter version was null or undefined when calling getMetadata.'\n        );\n      }\n      const localVarPath = `/pdaw/groups/{groupId}/artifacts/{artifactId}/versions/{version}/metadata.json`\n        .replace(`{${'groupId'}}`, encodeURIComponent(String(groupId)))\n        .replace(`{${'artifactId'}}`, encodeURIComponent(String(artifactId)))\n        .replace(`{${'version'}}`, encodeURIComponent(String(version)));\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get version parsed\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getParsed(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'groupId' is not null or undefined\n      if (groupId === null || groupId === undefined) {\n        throw new RequiredError(\n          'groupId',\n          'Required parameter groupId was null or undefined when calling getParsed.'\n        );\n      }\n      // verify required parameter 'artifactId' is not null or undefined\n      if (artifactId === null || artifactId === undefined) {\n        throw new RequiredError(\n          'artifactId',\n          'Required parameter artifactId was null or undefined when calling getParsed.'\n        );\n      }\n      // verify required parameter 'version' is not null or undefined\n      if (version === null || version === undefined) {\n        throw new RequiredError(\n          'version',\n          'Required parameter version was null or undefined when calling getParsed.'\n        );\n      }\n      const localVarPath = `/pdaw/groups/{groupId}/artifacts/{artifactId}/versions/{version}/parsed.json`\n        .replace(`{${'groupId'}}`, encodeURIComponent(String(groupId)))\n        .replace(`{${'artifactId'}}`, encodeURIComponent(String(artifactId)))\n        .replace(`{${'version'}}`, encodeURIComponent(String(version)));\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     *\n     * @summary Get list of versions\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getVersions(\n      groupId: string,\n      artifactId: string,\n      options: any = {}\n    ): RequestArgs {\n      // verify required parameter 'groupId' is not null or undefined\n      if (groupId === null || groupId === undefined) {\n        throw new RequiredError(\n          'groupId',\n          'Required parameter groupId was null or undefined when calling getVersions.'\n        );\n      }\n      // verify required parameter 'artifactId' is not null or undefined\n      if (artifactId === null || artifactId === undefined) {\n        throw new RequiredError(\n          'artifactId',\n          'Required parameter artifactId was null or undefined when calling getVersions.'\n        );\n      }\n      const localVarPath = `/pdaw/groups/{groupId}/artifacts/{artifactId}/versions.json`\n        .replace(`{${'groupId'}}`, encodeURIComponent(String(groupId)))\n        .replace(`{${'artifactId'}}`, encodeURIComponent(String(artifactId)));\n      const localVarUrlObj = url.parse(localVarPath, true);\n      let baseOptions;\n      if (configuration) {\n        baseOptions = configuration.baseOptions;\n      }\n      const localVarRequestOptions = {\n        method: 'GET',\n        ...baseOptions,\n        ...options,\n      };\n      const localVarHeaderParameter = {} as any;\n      const localVarQueryParameter = {} as any;\n\n      localVarUrlObj.query = {\n        ...localVarUrlObj.query,\n        ...localVarQueryParameter,\n        ...options.query,\n      };\n      // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n      delete localVarUrlObj.search;\n      localVarRequestOptions.headers = {\n        ...localVarHeaderParameter,\n        ...options.headers,\n      };\n\n      return {\n        url: url.format(localVarUrlObj),\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexport const DefaultApiFp = function(configuration?: Configuration) {\n  return {\n    /**\n     *\n     * @summary Get list of artifacts\n     * @param {string} groupId The groupId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getArtifacts(\n      groupId: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<Array<Artifact>> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getArtifacts(groupId, options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n    /**\n     *\n     * @summary Get list of dependencies\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDependencies(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<Array<Dependency>> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getDependencies(groupId, artifactId, version, options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n    /**\n     *\n     * @summary Get list of dependents\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDependents(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<Array<Dependency>> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getDependents(groupId, artifactId, version, options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n    /**\n     *\n     * @summary Get global metadata\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getGlobalMetadata(\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<Array<Metadata>> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getGlobalMetadata(options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n    /**\n     *\n     * @summary Get list of groups\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getGroupIds(\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<Array<Group>> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getGroupIds(options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n    /**\n     *\n     * @summary Get version metadata\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getMetadata(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<Array<Metadata>> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getMetadata(groupId, artifactId, version, options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n    /**\n     *\n     * @summary Get version parsed\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getParsed(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Dependency> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getParsed(groupId, artifactId, version, options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n    /**\n     *\n     * @summary Get list of versions\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getVersions(\n      groupId: string,\n      artifactId: string,\n      options?: any\n    ): (\n      axios?: AxiosInstance,\n      basePath?: string\n    ) => AxiosPromise<Array<Version>> {\n      const localVarAxiosArgs = DefaultApiAxiosParamCreator(\n        configuration\n      ).getVersions(groupId, artifactId, options);\n      return (\n        axios: AxiosInstance = globalAxios,\n        basePath: string = BASE_PATH\n      ) => {\n        const axiosRequestArgs = {\n          ...localVarAxiosArgs.options,\n          url: basePath + localVarAxiosArgs.url,\n        };\n        return axios.request(axiosRequestArgs);\n      };\n    },\n  };\n};\n\n/**\n * DefaultApi - factory interface\n * @export\n */\nexport const DefaultApiFactory = function(\n  configuration?: Configuration,\n  basePath?: string,\n  axios?: AxiosInstance\n) {\n  return {\n    /**\n     *\n     * @summary Get list of artifacts\n     * @param {string} groupId The groupId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getArtifacts(groupId: string, options?: any) {\n      return DefaultApiFp(configuration).getArtifacts(groupId, options)(\n        axios,\n        basePath\n      );\n    },\n    /**\n     *\n     * @summary Get list of dependencies\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDependencies(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ) {\n      return DefaultApiFp(configuration).getDependencies(\n        groupId,\n        artifactId,\n        version,\n        options\n      )(axios, basePath);\n    },\n    /**\n     *\n     * @summary Get list of dependents\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDependents(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ) {\n      return DefaultApiFp(configuration).getDependents(\n        groupId,\n        artifactId,\n        version,\n        options\n      )(axios, basePath);\n    },\n    /**\n     *\n     * @summary Get global metadata\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getGlobalMetadata(options?: any) {\n      return DefaultApiFp(configuration).getGlobalMetadata(options)(\n        axios,\n        basePath\n      );\n    },\n    /**\n     *\n     * @summary Get list of groups\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getGroupIds(options?: any) {\n      return DefaultApiFp(configuration).getGroupIds(options)(axios, basePath);\n    },\n    /**\n     *\n     * @summary Get version metadata\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getMetadata(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ) {\n      return DefaultApiFp(configuration).getMetadata(\n        groupId,\n        artifactId,\n        version,\n        options\n      )(axios, basePath);\n    },\n    /**\n     *\n     * @summary Get version parsed\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {string} version The version\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getParsed(\n      groupId: string,\n      artifactId: string,\n      version: string,\n      options?: any\n    ) {\n      return DefaultApiFp(configuration).getParsed(\n        groupId,\n        artifactId,\n        version,\n        options\n      )(axios, basePath);\n    },\n    /**\n     *\n     * @summary Get list of versions\n     * @param {string} groupId The groupId\n     * @param {string} artifactId The artifactId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getVersions(groupId: string, artifactId: string, options?: any) {\n      return DefaultApiFp(configuration).getVersions(\n        groupId,\n        artifactId,\n        options\n      )(axios, basePath);\n    },\n  };\n};\n\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nexport class DefaultApi extends BaseAPI {\n  /**\n   *\n   * @summary Get list of artifacts\n   * @param {string} groupId The groupId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getArtifacts(groupId: string, options?: any) {\n    return DefaultApiFp(this.configuration).getArtifacts(groupId, options)(\n      this.axios,\n      this.basePath\n    );\n  }\n\n  /**\n   *\n   * @summary Get list of dependencies\n   * @param {string} groupId The groupId\n   * @param {string} artifactId The artifactId\n   * @param {string} version The version\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getDependencies(\n    groupId: string,\n    artifactId: string,\n    version: string,\n    options?: any\n  ) {\n    return DefaultApiFp(this.configuration).getDependencies(\n      groupId,\n      artifactId,\n      version,\n      options\n    )(this.axios, this.basePath);\n  }\n\n  /**\n   *\n   * @summary Get list of dependents\n   * @param {string} groupId The groupId\n   * @param {string} artifactId The artifactId\n   * @param {string} version The version\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getDependents(\n    groupId: string,\n    artifactId: string,\n    version: string,\n    options?: any\n  ) {\n    return DefaultApiFp(this.configuration).getDependents(\n      groupId,\n      artifactId,\n      version,\n      options\n    )(this.axios, this.basePath);\n  }\n\n  /**\n   *\n   * @summary Get global metadata\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getGlobalMetadata(options?: any) {\n    return DefaultApiFp(this.configuration).getGlobalMetadata(options)(\n      this.axios,\n      this.basePath\n    );\n  }\n\n  /**\n   *\n   * @summary Get list of groups\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getGroupIds(options?: any) {\n    return DefaultApiFp(this.configuration).getGroupIds(options)(\n      this.axios,\n      this.basePath\n    );\n  }\n\n  /**\n   *\n   * @summary Get version metadata\n   * @param {string} groupId The groupId\n   * @param {string} artifactId The artifactId\n   * @param {string} version The version\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getMetadata(\n    groupId: string,\n    artifactId: string,\n    version: string,\n    options?: any\n  ) {\n    return DefaultApiFp(this.configuration).getMetadata(\n      groupId,\n      artifactId,\n      version,\n      options\n    )(this.axios, this.basePath);\n  }\n\n  /**\n   *\n   * @summary Get version parsed\n   * @param {string} groupId The groupId\n   * @param {string} artifactId The artifactId\n   * @param {string} version The version\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getParsed(\n    groupId: string,\n    artifactId: string,\n    version: string,\n    options?: any\n  ) {\n    return DefaultApiFp(this.configuration).getParsed(\n      groupId,\n      artifactId,\n      version,\n      options\n    )(this.axios, this.basePath);\n  }\n\n  /**\n   *\n   * @summary Get list of versions\n   * @param {string} groupId The groupId\n   * @param {string} artifactId The artifactId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof DefaultApi\n   */\n  public getVersions(groupId: string, artifactId: string, options?: any) {\n    return DefaultApiFp(this.configuration).getVersions(\n      groupId,\n      artifactId,\n      options\n    )(this.axios, this.basePath);\n  }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport {\n  DefaultApi,\n  DefaultApiFp,\n  Metadata,\n  DefaultApiFactory,\n} from './services/pdaw';\n\n@Component\nexport default class App extends Vue {\n  metadata: Metadata[] = [];\n  number_of_artifacts = '';\n  last_updated = '';\n\n  constructor() {\n    super();\n  }\n\n  mounted() {\n    new DefaultApi().getGlobalMetadata().then(it => {\n      this.metadata = it.data;\n      this.number_of_artifacts = this.getMetadata('number_of_artifacts');\n      this.last_updated = this.getMetadata('last_updated');\n    });\n  }\n\n  public getMetadata(key: string): string {\n    const found: Metadata[] = this.metadata.filter(m => m.key === key);\n    if (found.length == 1) {\n      return found[0].value;\n    }\n    return 'Not found';\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=21c99d92&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/bjerre/workspace/pom-dependency-analyzer-web/web/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib'\nimport { VBtn } from 'vuetify/lib'\nimport { VContent } from 'vuetify/lib'\nimport { VIcon } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VToolbar } from 'vuetify/lib'\nimport { VToolbarTitle } from 'vuetify/lib'\ninstallComponents(component, {VApp,VBtn,VContent,VIcon,VSpacer,VToolbar,VToolbarTitle})\n","import Vue from 'vue';\nimport Router from 'vue-router';\n\nVue.use(Router);\n\nexport default new Router({\n  mode: 'history',\n  base: './', //process.env.BASE_URL,\n  routes: [],\n});\n","import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {},\n  mutations: {},\n  actions: {},\n});\n","import Vue from 'vue';\nimport './plugins/vuetify';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport 'roboto-fontface/css/roboto/roboto-fontface.css';\nimport 'material-design-icons-iconfont/dist/material-design-icons.css';\n\nVue.config.productionTip = false;\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n}).$mount('#app');\n"],"sourceRoot":""}